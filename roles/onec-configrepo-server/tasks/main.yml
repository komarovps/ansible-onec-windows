---

- name: add new chocolatey internal source
  win_chocolatey_source:
    name: '{{ choco_ext_repo_name }}'
    state: present
    source: '{{ choco_ext_repo_source }}'

- name: grant domain account the SeServiceLogonRight user right
  win_user_right:
    name: SeServiceLogonRight
    users:
    - '{{ onec_crserver_usr }}'
    action: add
  when: onec_crserver_usr != 'LocalSystem'

# Install
- name: install x64 onec platform {{ v8version }}
  win_chocolatey:
    name: 1c
    version: '{{ v8version }}'
    params: '{{ onec_x64_install_params}}'
    force: '{{ reinstall }}'
    allow_multiple: yes
  register: onec_x64_install_result

- debug:
    var: onec_x64_install_result
    verbosity: 1

# Onec configuration repository services
- name: retrieving onec configuration repository services info
  win_shell: |
    $result = @()
    $services = Get-WmiObject win32_service | ? {$_.PathName -like "*{{ prev_v8version }}\bin\crserver.exe*"}
    foreach ($service in $services)
        {
        $obj = New-Object PSObject
        $obj | Add-Member -MemberType NoteProperty -Name "Name" -Value $service.Name
        $parameters = $($service.PathName -split "crserver.exe")[1] | % {$_ -replace '^"', ''} | % {$_.trim()}
        $obj | Add-Member -MemberType NoteProperty -Name "Parameters" -Value $parameters
        $result += $obj
        }
    ConvertTo-Json -InputObject @( $result )
  register: services_info

- debug: 
    var: services_info
    verbosity: 1

- name: set a services list variable
  set_fact:
    services: '{{ services_info.stdout | from_json }}'

- debug:
    var: services
    verbosity: 1

- debug:
    var: services | length
    verbosity: 1

- name: update v8version in onec conf repo services
  win_service:
    name: '{{ item.Name }}'
    path: '{{ onec_crserver_path }} {{ item.Parameters }}'
    start_mode: auto
    username: '{{ onec_crserver_usr }}'
    password: '{{ onec_crserver_pwd }}'
    state: restarted
  loop: '{{ services }}'
  when: update_services